@use '../base/variable' as var;
@use '../base/mixin' as mix;
@use '../base/extentsions';

.warning-message {
	opacity: 0;
	visibility: hidden;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 7;
	width: 100%;
	text-transform: uppercase;
	background: var.$mainBg;
	transform: scale(0);
	transition: opacity .6s ease, visibility .6s ease, transform .7s ease;

	&._active {
		opacity: 1;
		visibility: visible;
		transform: scale(1);
	}

	&__wrapper {
		position: relative;
		display: flex;
		flex-direction: column;
		min-height: 100vh;
		padding: 3em 0;
	}

	&__close {
		position: absolute;
		top: 50px;
		right: 0;
		width: 50px;
		height: 50px;
		background: url('../../assets/images/icon/close.svg') center center / cover no-repeat;
	}

	&__title-block {
		flex: 1 1 auto;
	}

	&__title {
		@include mix.adaptivFont(var.$titleFontSize, var.$titleFontSizeMin);

		@media screen and (min-width: 1920px) {
			font-size: 90px;
		}

		font-weight: 400;
		line-height: 1.3em;
	}

	&__call-block {
		display: flex;
		justify-content: space-between;
		gap: 1em;
	}

	&__call {
		@include mix.adaptivFont(100, var.$titleFontSizeMin);

		@media screen and (min-width: 1920px) {
			font-size: 100px;
		}

		line-height: 1.3em;
	}

	&__button {
		display: grid;
		place-content: center;
		align-items: center;
		width: 100%;
		max-width: 425px;
		padding: 0.5em;
		font-size: 32px;
		letter-spacing: 3.5px;
		font-weight: 400;
		border: 2px solid var.$lightColor;

		&>span {
			display: flex;
			align-items: center;
			gap: .5em;
		}
	}

	&__accent {
		color: var.$darkColor;
		background: var.$lightColor;
	}
}